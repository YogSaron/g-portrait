server:
    port: 8080
    tomcat:
        uri-encoding: utf-8

mybatis:
    mapper-locations: classpath*:mybatis/*.xml

spring:
    session:
        store-type: none
    thymeleaf:
        mode: LEGACYHTML5
    datasource:
        url: jdbc:mysql://localhost:3306/db_portrait?characterEncoding=utf8
        username: root
        password: 1234
        driver-class-name: com.mysql.jdbc.Driver
        platform: mysql
        type: com.alibaba.druid.pool.DruidDataSource
        initialSize: 1
        minIdle: 3
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 30000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        #useGlobalDataSourceStat: true
    redis:
      # Redis数据库索引（默认为0）
      database: 0
      # Redis服务器地址
      host: 127.0.0.1
      # Redis服务器连接端口
      port: 6379
      # Redis服务器连接密码（默认为空）
      password: 
      # 连接池最大连接数（使用负值表示没有限制）
      pool.max-active: 8
      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      pool.max-wait: -1
      # 连接池中的最大空闲连接
      pool.max-idle: 8
      # 连接池中的最小空闲连接
      pool.min-idle: 0
      # 连接超时时间（毫秒）
      timeout: 0