<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.me.mybatis.mapper.MeSysFiveElementsMapper">
  <resultMap id="BaseResultMap" type="com.me.mybatis.entity.MeSysFiveElements">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="gold" jdbcType="INTEGER" property="gold" />
    <result column="wood" jdbcType="INTEGER" property="wood" />
    <result column="water" jdbcType="INTEGER" property="water" />
    <result column="fire" jdbcType="INTEGER" property="fire" />
    <result column="soil" jdbcType="INTEGER" property="soil" />
  </resultMap>
  <sql id="Base_Column_List">
    id, parent_id, gold, wood, water, fire, soil
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from me_sys_five_elements
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!--根据parent_id查找-->
  <select id="selectByParentId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from me_sys_five_elements
    where parent_id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from me_sys_five_elements
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.me.mybatis.entity.MeSysFiveElements">
    insert into me_sys_five_elements (id, parent_id, gold, 
      wood, water, fire, 
      soil)
    values (#{id,jdbcType=INTEGER}, #{parentId,jdbcType=INTEGER}, #{gold,jdbcType=INTEGER}, 
      #{wood,jdbcType=INTEGER}, #{water,jdbcType=INTEGER}, #{fire,jdbcType=INTEGER}, 
      #{soil,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.me.mybatis.entity.MeSysFiveElements">
    insert into me_sys_five_elements
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="gold != null">
        gold,
      </if>
      <if test="wood != null">
        wood,
      </if>
      <if test="water != null">
        water,
      </if>
      <if test="fire != null">
        fire,
      </if>
      <if test="soil != null">
        soil,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="gold != null">
        #{gold,jdbcType=INTEGER},
      </if>
      <if test="wood != null">
        #{wood,jdbcType=INTEGER},
      </if>
      <if test="water != null">
        #{water,jdbcType=INTEGER},
      </if>
      <if test="fire != null">
        #{fire,jdbcType=INTEGER},
      </if>
      <if test="soil != null">
        #{soil,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.me.mybatis.entity.MeSysFiveElements">
    update me_sys_five_elements
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="gold != null">
        gold = #{gold,jdbcType=INTEGER},
      </if>
      <if test="wood != null">
        wood = #{wood,jdbcType=INTEGER},
      </if>
      <if test="water != null">
        water = #{water,jdbcType=INTEGER},
      </if>
      <if test="fire != null">
        fire = #{fire,jdbcType=INTEGER},
      </if>
      <if test="soil != null">
        soil = #{soil,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.me.mybatis.entity.MeSysFiveElements">
    update me_sys_five_elements
    set parent_id = #{parentId,jdbcType=INTEGER},
      gold = #{gold,jdbcType=INTEGER},
      wood = #{wood,jdbcType=INTEGER},
      water = #{water,jdbcType=INTEGER},
      fire = #{fire,jdbcType=INTEGER},
      soil = #{soil,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>